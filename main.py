from aiogram import Bot, Dispatcher, F
from aiogram.filters import Command, StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import default_state, State, StatesGroup
from aiogram.fsm.storage.redis import RedisStorage, Redis
from aiogram.types import CallbackQuery, InlineKeyboardButton, InlineKeyboardMarkup, Message, PhotoSize

BOT_TOKEN = '7064168249:AAFlr6jFl6fCBH5liH45cqhHqP6GN6-HzBg'

redis = Redis(host='localhost')
storage = RedisStorage(redis=redis)

bot = Bot(BOT_TOKEN)
dp = Dispatcher(storage=storage)

user_dict = {}

class FSMFillForm(StatesGroup):
    fill_name = State()
    fill_age = State()
    fill_gender = State()
    upload_photo = State()
    fill_education = State()
    fill_wish_news = State()


@dp.message(Command('start'), StateFilter(default_state))
async def process_start_command(message: Message):
    await message.answer(
        text='–≠—Ç–æ—Ç –±–æ—Ç –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É FSM\n\n'
             '–ß—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –∫ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—é –∞–Ω–∫–µ—Ç—ã - '
             '–æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /fillform'
    )


@dp.message(Command('cancel'), StateFilter(default_state))
async def process_cancel_command(message: Message):
    await message.answer(
        text='–û—Ç–º–µ–Ω—è—Ç—å –Ω–µ—á–µ–≥–æ. –í—ã –≤–Ω–µ –º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π\n\n'
             '–ß—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –∫ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—é –∞–Ω–∫–µ—Ç—ã - '
             '–æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /fillform'
    )


@dp.message(Command('cancel'), ~StateFilter(default_state))
async def process_cancel_command_state(message: Message, state: FSMContext):
    await message.answer(
        text='–í—ã –≤—ã—à–ª–∏ –∏–∑ –º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π\n\n'
             '–ß—Ç–æ–±—ã —Å–Ω–æ–≤–∞ –ø–µ—Ä–µ–π—Ç–∏ –∫ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—é –∞–Ω–∫–µ—Ç—ã - '
             '–æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /fillform'

    )
    await state.clear()


@dp.message(Command('fillform'), StateFilter(default_state))
async def process_fillform_command(message: Message, state: FSMContext):
    await message.answer(text='–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è')
    await state.set_state(FSMFillForm.fill_name)


@dp.message(StateFilter(FSMFillForm.fill_name), F.text.isalpha())
async def process_name_sent(message: Message, state: FSMContext):
    await state.update_data(name=message.text)
    await message.answer(text='–°–ø–∞—Å–∏–±–æ!\n\n–ê —Ç–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç')
    await state.set_state(FSMFillForm.fill_age)


@dp.message(StateFilter(FSMFillForm.fill_name))
async def warning_not_name(message: Message):
    await message.answer(
        text='–¢–æ, —á—Ç–æ –≤—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –Ω–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ –∏–º—è\n\n'
             '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è\n\n'
             '–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–µ—Ä–≤–∞—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã - '
             '–æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /cancel'
    )


@dp.message(StateFilter(FSMFillForm.fill_age),
            lambda x: x.text.isdigit() and 18 <= int(x.text) <= 80)
async def process_age_sent(message: Message, state: FSMContext):
    await state.update_data(age=message.text)
    male_button = InlineKeyboardButton(
        text='–ú—É–∂—Å–∫–æ–π üë®',
        callback_data='–º—É–∂—Å–∫–æ–π'
    )
    female_button = InlineKeyboardButton(
        text='–ñ–µ–Ω—Å–∫–∏–π üë©',
        callback_data='–∂–µ–Ω—Å–∫–∏–π'
    )
    undefined_button = InlineKeyboardButton(
        text='–Ø –ø–æ–∫–∞ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–∏–ª—Å—è ü§∑',
        callback_data='—è –Ω–µ –∑–Ω–∞—é'
    )
    keyboard = [
        [male_button, female_button],
        [undefined_button]
    ]
    markup = InlineKeyboardMarkup(inline_keyboard=keyboard)
    await message.answer(
        text='–°–ø–∞—Å–∏–±–æ!\n\n–£–∫–∞–∂–∏—Ç–µ –≤–∞—à –ø–æ–ª',
        reply_markup=markup
    )
    await state.set_state(FSMFillForm.fill_gender)


@dp.message(StateFilter(FSMFillForm.fill_age))
async def warning_not_age(message: Message):
    await message.answer(
        text='–í–æ–∑—Ä–∞—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º –æ—Ç 18 –¥–æ 80\n\n'
             '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑\n\n–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–µ—Ä–≤–∞—Ç—å '
             '–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã - –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /cancel'
    )


@dp.callback_query(StateFilter(FSMFillForm.fill_gender),
                   F.data.in_(['–º—É–∂—Å–∫–æ–π', '–∂–µ–Ω—Å–∫–∏–π', '—è –Ω–µ –∑–Ω–∞—é']))
async def process_gender_press(callback: CallbackQuery, state: FSMContext):
    await state.update_data(gender=callback.data)
    await callback.message.delete()
    await callback.message.answer(
        text='–°–ø–∞—Å–∏–±–æ! –ê —Ç–µ–ø–µ—Ä—å –∑–∞–≥—Ä—É–∑–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–∞—à–µ —Ñ–æ—Ç–æ'
    )
    await state.set_state(FSMFillForm.upload_photo)


@dp.message(StateFilter(FSMFillForm.fill_gender))
async def warning_not_gender(message: Message):
    await message.answer(
        text='–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏ '
             '–ø—Ä–∏ –≤—ã–±–æ—Ä–µ –ø–æ–ª–∞\n\n–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–µ—Ä–≤–∞—Ç—å '
             '–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã - –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /cancel'
    )


@dp.message(StateFilter(FSMFillForm.upload_photo),
            F.photo[-1].as_('largest_photo'))
async def process_photo_sent(message: Message, state: FSMContext, largest_photo: PhotoSize):
    await state.update_data(
        photo_unique_id=largest_photo.file_unique_id,
        photo_id=largest_photo.file_id
    )
    secondary_button = InlineKeyboardButton(
        text='–°—Ä–µ–¥–Ω–µ–µ',
        callback_data='—Å—Ä–µ–¥–Ω–µ–µ'
    )
    higher_button = InlineKeyboardButton(
        text='–í—ã—Å—à–µ–µ',
        callback_data='–≤—ã—Å—à–µ–µ'
    )
    no_edu_button = InlineKeyboardButton(
        text='–ù–µ—Ç –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è',
        callback_data='–Ω–µ—Ç –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è'
    )
    keyboard = [
        [secondary_button, higher_button],
        [no_edu_button]
    ]
    markup = InlineKeyboardMarkup(inline_keyboard=keyboard)

    await message.answer(
        text='–°–ø–∞—Å–∏–±–æ!\n\n–£–∫–∞–∂–∏—Ç–µ –≤–∞—à–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ',
        reply_markup=markup
    )
    await state.set_state(FSMFillForm.fill_education)


@dp.message(StateFilter(FSMFillForm.upload_photo))
async def warning_not_photo(message: Message):
    await message.answer(
        text='–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞ —ç—Ç–æ–º —à–∞–≥–µ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ '
             '–≤–∞—à–µ —Ñ–æ—Ç–æ\n\n–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–µ—Ä–≤–∞—Ç—å '
             '–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã - –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /cancel'
    )


@dp.callback_query(StateFilter(FSMFillForm.fill_education),
                   F.data.in_(['—Å—Ä–µ–¥–Ω–µ–µ', '–≤—ã—Å—à–µ–µ', '–Ω–µ—Ç –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è']))
async def process_education_press(callback: CallbackQuery, state: FSMContext):
    await state.update_data(education=callback.data)
    yes_news_button = InlineKeyboardButton(
        text='–î–∞, —Å–ø–∞—Å–∏–±–æ!',
        callback_data='yes_news'
    )
    no_news_button = InlineKeyboardButton(
        text='–ù–µ—Ç, —Å–ø–∞—Å–∏–±–æ!',
        callback_data='no_news'
    )
    keyboard = [
        [yes_news_button, no_news_button]
    ]
    markup = InlineKeyboardMarkup(inline_keyboard=keyboard)
    await callback.message.edit_text(
        text='–°–ø–∞—Å–∏–±–æ!\n\n–û—Å—Ç–∞–ª—Å—è –ø–æ—Å–ª–µ–¥–Ω–∏–π —à–∞–≥.\n'
             '–•–æ—Ç–µ–ª–∏ –±—ã –≤—ã –ø–æ–ª—É—á–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏?',
        reply_markup=markup
    )
    await state.set_state(FSMFillForm.fill_wish_news)


@dp.message(StateFilter(FSMFillForm.fill_education))
async def warning_not_education(message: Message):
    await message.answer(
        text='–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è\n\n'
             '–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–µ—Ä–≤–∞—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã - –æ—Ç–ø—Ä–∞–≤—å—Ç–µ '
             '–∫–æ–º–∞–Ω–¥—É /cancel'
    )


@dp.callback_query(StateFilter(FSMFillForm.fill_wish_news),
                   F.data.in_(['yes_news', 'no_news']))
async def process_wish_news_press(callback: CallbackQuery, state: FSMContext):
    # C–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–æ–≤–æ—Å—Ç–µ–π –ø–æ –∫–ª—é—á—É "wish_news"
    if callback.data == 'yes_news':
        await state.update_data(wish_news='–î–∞')
    elif callback.data == 'no_news':
        await state.update_data(wish_news='–ù–µ—Ç')
    # –î–æ–±–∞–≤–ª—è–µ–º –≤ "–±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö" –∞–Ω–∫–µ—Ç—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    # –ø–æ –∫–ª—é—á—É id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_dict[callback.from_user.id] = await state.get_data()
    # –ó–∞–≤–µ—Ä—à–∞–µ–º –º–∞—à–∏–Ω—É —Å–æ—Å—Ç–æ—è–Ω–∏–π
    await state.clear()
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ —á–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –≤—ã—Ö–æ–¥–µ –∏–∑ –º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π
    await callback.message.edit_text(
        text='–°–ø–∞—Å–∏–±–æ! –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!\n\n'
             '–í—ã –≤—ã—à–ª–∏ –∏–∑ –º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π'
    )
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ —á–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ—é –∞–Ω–∫–µ—Ç—É
    await callback.message.answer(
        text='–ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–∞–Ω–Ω—ã–µ –≤–∞—à–µ–π '
             '–∞–Ω–∫–µ—Ç—ã - –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /showdata'
    )


@dp.message(StateFilter(FSMFillForm.fill_wish_news))
async def warning_not_wish_news(message: Message):
    await message.answer(
        text='–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏!\n\n'
             '–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–µ—Ä–≤–∞—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã - '
             '–æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /cancel'
    )


@dp.message(Command(commands='showdata'), StateFilter(default_state))
async def process_showdata_command(message: Message):
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∞–Ω–∫–µ—Ç—É, –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å –≤ "–±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"
    if message.from_user.id in user_dict:
        await message.answer_photo(
            photo=user_dict[message.from_user.id]['photo_id'],
            caption=f'–ò–º—è: {user_dict[message.from_user.id]["name"]}\n'
                    f'–í–æ–∑—Ä–∞—Å—Ç: {user_dict[message.from_user.id]["age"]}\n'
                    f'–ü–æ–ª: {user_dict[message.from_user.id]["gender"]}\n'
                    f'–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ: {user_dict[message.from_user.id]["education"]}\n'
                    f'–ü–æ–ª—É—á–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏: {user_dict[message.from_user.id]["wish_news"]}'
        )
    else:
        # –ï—Å–ª–∏ –∞–Ω–∫–µ—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –Ω–µ—Ç - –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –∑–∞–ø–æ–ª–Ω–∏—Ç—å
        await message.answer(
            text='–í—ã –µ—â–µ –Ω–µ –∑–∞–ø–æ–ª–Ω—è–ª–∏ –∞–Ω–∫–µ—Ç—É. –ß—Ç–æ–±—ã –ø—Ä–∏—Å—Ç—É–ø–∏—Ç—å - '
            '–æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /fillform'
        )


@dp.message(StateFilter(default_state))
async def send_echo(message: Message):
    await message.reply(text='–ò–∑–≤–∏–Ω–∏—Ç–µ, –º–æ—è —Ç–≤–æ—è –Ω–µ –ø–æ–Ω–∏–º–∞—Ç—å')



if __name__ == '__main__':
    dp.run_polling(bot)
